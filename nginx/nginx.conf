worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    proxy_cache_path /usr/local/nginx/cache levels=1:2 keys_zone=default_cache:10m max_size=5g inactive=60m use_temp_path=off;

    vod_metadata_cache metadata_cache 256m;
    vod_mapping_cache mapping_cache 5m;
    vod_response_cache response_cache 64m;
    vod_drm_info_cache drm_cache 32m;
    vod_cache_buffer_size 8m;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        location / {
            vod hls;
            vod_mode mapped;
            vod_upstream_location /upstream;
            vod_remote_upstream_location /upstream/;
            vod_max_mapping_response_size 100K;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header 'Access-Control-Allow-Headers' 'Range';
        }

                
        #directly setting /s3 as an upstream for / fails both the caching and the s3 authorization
        #defining a middleware like this is the only setup that worked
        location /upstream {
            internal;
            rewrite /upstream/(.*) /$1 break;
            proxy_pass http://127.0.0.1/s3/$1;
        }

        location /s3 {
            allow 127.0.0.1;
            deny all;
            rewrite /s3/(.*) /$1 break;

            proxy_pass http://your_bucket_name.s3.amazonaws.com;
            aws_access_key "your_access_key";
            aws_secret_key "your_secret_key";
            s3_bucket your_bucket_name;
            proxy_set_header Authorization $s3_auth_token;
            proxy_set_header x-amz-date $aws_date;

            proxy_cache default_cache;
            proxy_cache_valid 200 600s;
            proxy_cache_lock on;
            proxy_cache_lock_timeout 0s;
            proxy_cache_lock_age 200s;
            proxy_cache_use_stale updating;
        }        
    }
}
